suite: Test AKO's StatefulSet with GatewayAPI
templates:
  - statefulset.yaml
tests:
  - it: StatefulSet should render only a single container when GatewayAPI is disabled.
    set:
      featureGates:
        GatewayAPI: false
    asserts:
      - isKind:
          of: StatefulSet
      - hasDocuments:
          count: 1
      - isNotEmpty:
          path: spec.template.spec.containers[0]
      - equal:
          path: spec.template.spec.containers[0].name
          value: ako
      - isNull:
          path: spec.template.spec.containers[1]
  - it: StatefulSet should render two containers when GatewayAPI is enabled.
    set:
      featureGates:
        GatewayAPI: true
      GatewayAPI:
        image:
          repository: "127.0.0.1:5000/ako/ako-gateway-api"
          pullPolicy: "Always"
      akoGatewayLogFile: "gw-api-ut.log"
    asserts:
      - isKind:
          of: StatefulSet
      - hasDocuments:
          count: 1
      - equal:
          path: spec.template.spec.containers[0].name
          value: ako
      - isNotEmpty:
          path: spec.template.spec.containers[1]
      - equal:
          path: spec.template.spec.containers[1].name
          value: ako-gateway-api
      - equal:
          path: spec.template.spec.containers[1].image
          value: "127.0.0.1:5000/ako/ako-gateway-api:latest"
      - equal:
          path: spec.template.spec.containers[1].imagePullPolicy
          value: "Always"
      - contains:
          path: spec.template.spec.containers[1].env
          content:      
            name: LOG_FILE_NAME
            value: "gw-api-ut.log"
  - it: StatefulSet should be able to accept replicacount as string value
    set:
      replicaCount: "1"
    asserts:
      - isKind:
          of: StatefulSet
      - hasDocuments:
          count: 1
      - equal:
          path: spec.replicas
          value: 1
  - it: StatefulSet should be able to accept replicacount as integer value
    set:
      replicaCount: 1
    asserts:
      - isKind:
          of: StatefulSet
      - hasDocuments:
          count: 1
      - equal:
          path: spec.replicas
          value: 1
  - it: StatefulSet should be able to accept replicacount as float value
    set:
      replicaCount: 1.0
    asserts:
      - isKind:
          of: StatefulSet
      - hasDocuments:
          count: 1
      - equal:
          path: spec.replicas
          value: 1
  - it: StatefulSet should contain VPC_MODE in ako statefulset when GatewayAPI is disabled
    set:
      featureGates:
        GatewayAPI: false
    asserts:
      - isKind:
          of: StatefulSet
      - hasDocuments:
          count: 1
      - contains:
          path: spec.template.spec.containers[0].env
          content:      
            name: VPC_MODE
            valueFrom:
              configMapKeyRef:
                key: vpcMode
                name: avi-k8s-config
  - it: StatefulSet should contain VPC_MODE in both ako and ako-gateway-api statefulset when GatewayAPI is enabled
    set:
      featureGates:
        GatewayAPI: true
    asserts:
      - isKind:
          of: StatefulSet
      - hasDocuments:
          count: 1
      - contains:
          path: spec.template.spec.containers[0].env
          content:      
            name: VPC_MODE
            valueFrom:
              configMapKeyRef:
                key: vpcMode
                name: avi-k8s-config
      - contains:
          path: spec.template.spec.containers[1].env
          content:      
            name: VPC_MODE
            valueFrom:
              configMapKeyRef:
                key: vpcMode
                name: avi-k8s-config
  - it: StatefulSet should render istio-certs volume and annotations when Istio is enabled
    set:
      featureGates:
        GatewayAPI: true
      AKOSettings:
        istioEnabled: true
      GatewayAPI:
        image:
          repository: "127.0.0.1:5000/ako/ako-gateway-api"
          pullPolicy: "Always"
      akoGatewayLogFile: "gw-api-istio.log"
    asserts:
      - isKind:
          of: StatefulSet
      - hasDocuments:
          count: 1
      # Check Istio annotations are present
      - isNotEmpty:
          path: spec.template.metadata.annotations
      - equal:
          path: spec.template.metadata.annotations["sidecar.istio.io/inject"]
          value: "true"
      - isNotEmpty:
          path: spec.template.metadata.annotations["sidecar.istio.io/userVolume"]
      - isNotEmpty:
          path: spec.template.metadata.annotations["sidecar.istio.io/userVolumeMount"]
      # Check istio-certs volume is defined
      - contains:
          path: spec.template.spec.volumes
          content:
            name: istio-certs
            emptyDir:
              medium: Memory
      # Check both containers are present
      - equal:
          path: spec.template.spec.containers[0].name
          value: ako
      - equal:
          path: spec.template.spec.containers[1].name
          value: ako-gateway-api
      # Check istio-certs volume mount in AKO container only
      - isNotEmpty:
          path: spec.template.spec.containers[0].volumeMounts
      - contains:
          path: spec.template.spec.containers[0].volumeMounts
          content:
            name: istio-certs
            mountPath: /etc/istio-output-certs/
      # Note: GatewayAPI container doesn't mount istio-certs volume
      # Only AKO container mounts the istio-certs volume
      # Check both containers have ISTIO_ENABLED env var
      - contains:
          path: spec.template.spec.containers[0].env
          content:
            name: ISTIO_ENABLED
            valueFrom:
              configMapKeyRef:
                key: istioEnabled
                name: avi-k8s-config
      - contains:
          path: spec.template.spec.containers[1].env
          content:
            name: ISTIO_ENABLED
            valueFrom:
              configMapKeyRef:
                key: istioEnabled
                name: avi-k8s-config
  - it: StatefulSet should render istio-certs volume with sizeLimit when Istio is enabled and persistentVolumeClaim is specified
    set:
      featureGates:
        GatewayAPI: true
      AKOSettings:
        istioEnabled: true
      persistentVolumeClaim: "ako-pvc"
      GatewayAPI:
        image:
          repository: "127.0.0.1:5000/ako/ako-gateway-api"
          pullPolicy: "Always"
      akoGatewayLogFile: "gw-api-istio.log"
    asserts:
      - isKind:
          of: StatefulSet
      - hasDocuments:
          count: 1
      # Check both volumes are present
      - contains:
          path: spec.template.spec.volumes
          content:
            name: ako-pv-storage
            persistentVolumeClaim:
              claimName: ako-pvc
      - contains:
          path: spec.template.spec.volumes
          content:
            name: istio-certs
            emptyDir:
              medium: Memory
      # Check both containers are present
      - equal:
          path: spec.template.spec.containers[0].name
          value: ako
      - equal:
          path: spec.template.spec.containers[1].name
          value: ako-gateway-api
      # Check istio-certs volume mount in AKO container only
      - isNotEmpty:
          path: spec.template.spec.containers[0].volumeMounts
      - lengthEqual:
          path: spec.template.spec.containers[0].volumeMounts
          count: 2
      - contains:
          path: spec.template.spec.containers[0].volumeMounts
          content:
            name: ako-pv-storage
            mountPath: /log
      - contains:
          path: spec.template.spec.containers[0].volumeMounts
          content:
            name: istio-certs
            mountPath: /etc/istio-output-certs/
      # Check GatewayAPI container has PVC volume mount but not istio-certs
      - contains:
          path: spec.template.spec.containers[1].volumeMounts
          content:
            name: ako-pv-storage
            mountPath: /log
      # Note: GatewayAPI container doesn't mount istio-certs volume
      # Only AKO container mounts the istio-certs volume
  - it: StatefulSet should not render istio-certs volume when Istio is disabled
    set:
      AKOSettings:
        istioEnabled: false
    asserts:
      - isKind:
          of: StatefulSet
      - hasDocuments:
          count: 1
      # Check Istio annotations are not present
      - isNull:
          path: spec.template.metadata.annotations
      # Check istio-certs volume is not present
      - isNull:
          path: spec.template.spec.volumes
